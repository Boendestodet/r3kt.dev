{
  "app/layout.tsx": "import type { Metadata } from 'next'\nimport { Inter } from 'next/font/google'\nimport './globals.css'\n\nconst inter = Inter({ subsets: ['latin'] })\n\nexport const metadata: Metadata = {\n  title: 'Rate Limiting Demo',\n  description: 'A demonstration of rate limiting in web applications',\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"en\">\n      <body className={inter.className}>{children}</body>\n    </html>\n  )\n}",
  "app/page.tsx": "import { useState } from 'react'\n\nexport default function Home() {\n  const [requests, setRequests] = useState(0)\n  const [isRateLimited, setIsRateLimited] = useState(false)\n  const [lastReset, setLastReset] = useState<Date | null>(null)\n  const [requestHistory, setRequestHistory] = useState<Array<{timestamp: Date, success: boolean}>>([])\n\n  const makeRequest = async () => {\n    const now = new Date()\n    \n    // Simple rate limiting: max 5 requests per 10 seconds\n    const recentRequests = requestHistory.filter(\n      req => now.getTime() - req.timestamp.getTime() < 10000\n    )\n    \n    if (recentRequests.length >= 5) {\n      setIsRateLimited(true)\n      setRequestHistory(prev => [...prev, { timestamp: now, success: false }])\n      \n      // Auto-reset after 10 seconds\n      setTimeout(() => {\n        setIsRateLimited(false)\n        setLastReset(new Date())\n      }, 10000)\n      \n      return\n    }\n    \n    // Successful request\n    setRequests(prev => prev + 1)\n    setIsRateLimited(false)\n    setRequestHistory(prev => [...prev, { timestamp: now, success: true }])\n  }\n\n  const resetRateLimit = () => {\n    setRequests(0)\n    setIsRateLimited(false)\n    setRequestHistory([])\n    setLastReset(new Date())\n  }\n\n  const recentRequests = requestHistory.filter(\n    req => new Date().getTime() - req.timestamp.getTime() < 10000\n  )\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <header className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n            Rate Limiting Demo\n          </h1>\n          <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\n            This demo shows how rate limiting works in web applications. \n            Try making requests to see the rate limiting in action!\n          </p>\n        </header>\n\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {/* Control Panel */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n              <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-6\">\n                Request Control\n              </h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400 mb-2\">\n                    {requests}\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    Total Successful Requests\n                  </div>\n                </div>\n\n                <button\n                  onClick={makeRequest}\n                  disabled={isRateLimited}\n                  className={`w-full py-3 px-4 rounded-lg font-medium transition-colors ${\n                    isRateLimited\n                      ? 'bg-red-100 text-red-600 cursor-not-allowed dark:bg-red-900 dark:text-red-300'\n                      : 'bg-blue-600 hover:bg-blue-700 text-white dark:bg-blue-500 dark:hover:bg-blue-600'\n                  }`}\n                >\n                  {isRateLimited ? 'Rate Limited!' : 'Make Request'}\n                </button>\n\n                <button\n                  onClick={resetRateLimit}\n                  className=\"w-full py-2 px-4 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-lg font-medium transition-colors dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-200\"\n                >\n                  Reset Counter\n                </button>\n              </div>\n            </div>\n\n            {/* Status Panel */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n              <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-6\">\n                Rate Limit Status\n              </h2>\n              \n              <div className=\"space-y-4\">\n                <div className={`p-4 rounded-lg ${\n                  isRateLimited \n                    ? 'bg-red-50 border border-red-200 dark:bg-red-900 dark:border-red-700'\n                    : 'bg-green-50 border border-green-200 dark:bg-green-900 dark:border-green-700'\n                }`}>\n                  <div className={`font-medium ${\n                    isRateLimited ? 'text-red-800 dark:text-red-200' : 'text-green-800 dark:text-green-200'\n                  }`}>\n                    Status: {isRateLimited ? 'Rate Limited' : 'Available'}\n                  </div>\n                  <div className={`text-sm mt-1 ${\n                    isRateLimited ? 'text-red-600 dark:text-red-300' : 'text-green-600 dark:text-green-300'\n                  }`}>\n                    {isRateLimited \n                      ? 'Too many requests! Wait 10 seconds.'\n                      : 'You can make requests freely.'\n                    }\n                  </div>\n                </div>\n\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  <div>Recent requests (10s window): {recentRequests.length}/5</div>\n                  <div>Rate limit: 5 requests per 10 seconds</div>\n                  {lastReset && (\n                    <div>Last reset: {lastReset.toLocaleTimeString()}</div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Request History */}\n          <div className=\"mt-8 bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n            <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-6\">\n              Request History\n            </h2>\n            \n            {requestHistory.length === 0 ? (\n              <p className=\"text-gray-500 dark:text-gray-400 text-center py-8\">\n                No requests made yet. Click \"Make Request\" to start!\n              </p>\n            ) : (\n              <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n                {requestHistory.slice().reverse().map((req, index) => (\n                  <div \n                    key={index}\n                    className={`flex items-center justify-between p-3 rounded-lg ${\n                      req.success \n                        ? 'bg-green-50 dark:bg-green-900'\n                        : 'bg-red-50 dark:bg-red-900'\n                    }`}\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-3 h-3 rounded-full ${\n                        req.success ? 'bg-green-500' : 'bg-red-500'\n                      }`}></div>\n                      <span className={`font-medium ${\n                        req.success ? 'text-green-800 dark:text-green-200' : 'text-red-800 dark:text-red-200'\n                      }`}>\n                        {req.success ? 'Success' : 'Rate Limited'}\n                      </span>\n                    </div>\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {req.timestamp.toLocaleTimeString()}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Information Panel */}\n          <div className=\"mt-8 bg-blue-50 dark:bg-blue-900 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-blue-900 dark:text-blue-100 mb-3\">\n              How Rate Limiting Works\n            </h3>\n            <div className=\"text-blue-800 dark:text-blue-200 space-y-2\">\n              <p>• Rate limiting prevents abuse by restricting the number of requests a user can make</p>\n              <p>• This demo implements a simple sliding window: 5 requests per 10 seconds</p>\n              <p>• When the limit is exceeded, requests are blocked until the window resets</p>\n              <p>• Rate limiting is essential for API security and fair resource usage</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}",
  "app/globals.css": "@import \"tailwindcss\";\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nbody {\n  color: rgb(var(--foreground-rgb));\n  background: linear-gradient(\n      to bottom,\n      transparent,\n      rgb(var(--background-end-rgb))\n    )\n    rgb(var(--background-start-rgb));\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n/* Custom animations */\n@keyframes pulse-slow {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.animate-pulse-slow {\n  animation: pulse-slow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n/* Smooth transitions */\n* {\n  transition: all 0.2s ease-in-out;\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 3px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #a8a8a8;\n}\n\n/* Dark mode scrollbar */\n@media (prefers-color-scheme: dark) {\n  ::-webkit-scrollbar-track {\n    background: #374151;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background: #6b7280;\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: #9ca3af;\n  }\n}"
}